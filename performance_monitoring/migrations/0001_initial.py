# Generated by Django 5.0.7 on 2025-06-15 14:44

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='DepartmentPassword',
            fields=[
                ('department', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='performance_monitoring.department')),
                ('password', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('academic_year', models.IntegerField()),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'ordering': ['academic_year', 'start_date'],
                'unique_together': {('name', 'academic_year')},
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_code', models.CharField(max_length=10, unique=True)),
                ('course_title', models.CharField(max_length=200)),
                ('credit_unit', models.IntegerField()),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='performance_monitoring.department')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='performance_monitoring.semester')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('custom_password', models.CharField(blank=True, max_length=128, null=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='performance_monitoring.department')),
            ],
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_date', models.DateField(auto_now_add=True)),
                ('classes_attended', models.IntegerField(default=0, help_text='Number of classes attended (out of 10)')),
                ('ca_score', models.IntegerField(default=0, help_text='Continuous Assessment Score (max 30)', validators=[django.core.validators.MaxValueValidator(30)])),
                ('exam_score', models.IntegerField(default=0, help_text='Exam Score (max 70)', validators=[django.core.validators.MaxValueValidator(70)])),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='performance_monitoring.course')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='performance_monitoring.semester')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='performance_monitoring.student')),
            ],
            options={
                'unique_together': {('student', 'course', 'semester')},
            },
        ),
    ]
